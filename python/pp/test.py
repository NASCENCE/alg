import numpy as np

a = [(13.7653648853302, 0, 0, 1, 0), (27.52395796775818, 0, 0, 1, 1), (41.285741090774536, 0, 1, 1, 0), (55.0470929145813, 1, 1, 1, 0), (82.56320595741272, 1, 1, 1, 1), (114.87627601623535, 0, 1, 2, 0), (236.35307002067566, 0, 2, 1, 0), (250.09364199638367, 1, 2, 1, 0), (263.8554780483246, 2, 2, 1, 0), (277.8970899581909, 0, 2, 1, 1), (291.67326307296753, 1, 2, 1, 1), (305.4527659416199, 2, 2, 1, 1), (337.7155900001526, 0, 2, 2, 0), (380.85607409477234, 0, 2, 2, 1), (424.0502710342407, 0, 2, 2, 2), (541.6817541122437, 0, 2, 3, 0), (690.8600780963898, 0, 2, 3, 2), (1076.8870248794556, 0, 3, 1, 0), (1090.6457459926605, 1, 3, 1, 0), (1104.4249970912933, 2, 3, 1, 0), (1118.1670589447021, 3, 3, 1, 0), (1131.9465889930725, 4, 3, 1, 0), (1145.703586101532, 0, 3, 1, 1), (1187.0074520111084, 3, 3, 1, 1), (1200.7511398792267, 4, 3, 1, 1), (1233.019227027893, 0, 3, 2, 0), (1275.8427639007568, 0, 3, 2, 1), (1319.2834749221802, 0, 3, 2, 2), (1436.9452168941498, 0, 3, 3, 0), (1734.631432056427, 0, 3, 3, 4)]

def create_problemset(n_bits, problem_id):
  target = []
  problem = []
  for i in np.arange(2**n_bits):
    inputs = []
    for b in np.arange(n_bits):
      inputs.append((i >> b) & 1)
    if (problem_id >> i) & 1:
      target.append(1)
    else:
      target.append(0)

    problem.append(inputs)
  return problem, target

s = []

print "bits, problem_id, (input, target) \\\\"

for d in a:
    p = d[2:]
    #print(p, s)
    if p in s:
        continue
    s.append(p)

    print (p[1], p[2], create_problemset(p[1], p[2]))
    #print "%s & %s & %s & %s \\\\" % (d[0], d[2] + 1, d[3], d[4])
